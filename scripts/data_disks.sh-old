#!/bin/bash

if [ $5 ]; then
  CM_API_HOST=$1
  CM_API_PORT=$2
  CM_API_USER=$3
  CM_API_PASS=$4
  CDH_CLUSTER_NAME=$5

  HDFS_FILESYSTEM="ext4"
  MOUNT_BASEDIR="/dfs"
  COUNT=0
  DEVICES=$(awk '/xvd[b-z]/ { print $NF }' /proc/partitions)
  OWNER_USER="hdfs"
  OWNER_GROUP="hadoop"

  if [ "${DEVICES}" ]; then
    for DEVICE in $DEVICES; do
      echo "Found ${DEVICE}"
      DEVICEPATH="/dev/${DEVICE}"
      blkid ${DEVICEPATH} | grep "${HDFS_FILESYSTEM}" >/dev/null 2>&1
      if [ $? == 0 ];
      then
        echo "Device already formatted as ${HDFS_FILESYSTEM}"
      else
        #GCP automatically format and mount secondary disks for Datanode servers.
        echo "Checking if device is mounted"
        MOUNTPOINT=$(grep ${DEVICE} /proc/mounts | awk '{ print $2 }')
        if [ ${MOUNTPOINT} ];
        then
          umount ${MOUNTPOINT}
        fi
        mkfs -t $HDFS_FILESYSTEM ${DEVICEPATH}
        MOUNTDIR="${MOUNT_BASEDIR}/data${COUNT}"
        if [ ! -d $MOUNTDIR ]; then
          mkdir -p $MOUNTDIR
        fi
        mount ${DEVICEPATH} ${MOUNTDIR}
        chmod 700 ${MOUNTDIR}
        curl -u $CM_API_USER:$CM_API_PASS -X GET "http://${CM_API_HOST}:${CM_API_PORT}/api/v13/clusters/$CDH_CLUSTER_NAME/services/HDFS/roleConfigGroups/HDFS-DATANODE-BASE/" 2>/dev/null | grep -A 1 dfs_data_dir_list | grep value | awk '{ print $3 }' | sed -e 's/"//g' | grep "${MOUNTDIR}" >/dev/null 2>&1
        if [ $? == 0 ]; then
          echo "Disk already configured"
        else
          CURRENT_CONFIG=$(curl -u $CM_API_USER:$CM_API_PASS -X GET "http://${CM_API_HOST}:${CM_API_PORT}/api/v13/clusters/$CDH_CLUSTER_NAME/services/HDFS/roleConfigGroups/HDFS-DATANODE-BASE/" 2>/dev/null | grep -A 1 dfs_data_dir_list | grep value | awk '{ print $3 }' | sed -e 's/"//g')
          if [ ${CURRENT_CONFIG} ]; then
            CURRENT_CONFIG="${CURRENT_CONFIG},${MOUNTDIR}"
          else
            CURRENT_CONFIG="${MOUNTDIR}"
          fi
          cat > config.json <<EOF
{
  "items": [
  {
    "name": "dfs_data_dir_list",
    "value": "${CURRENT_CONFIG}"
  }
  ]
}
EOF
          curl -u $CM_API_USER:$CM_API_PASS -X PUT -H 'Content-Type: application/json' "http://${CM_API_HOST}:${CM_API_PORT}/api/v13/clusters/$CDH_CLUSTER_NAME/services/HDFS/roleConfigGroups/HDFS-DATANODE-BASE/config" -d @config.json
        fi
        let COUNT++
      fi
    done
    chown -R ${OWNER_USER}:${OWNER_GROUP} ${MOUNT_BASEDIR}
  else
    echo "WARNING - No Secondary devices found. Using /var/tmp/datanode as datanode dir"
    mkdir -p /var/tmp/datanode
    chown -R ${OWNER_USER}:${OWNER_GROUP} /var/tmp/datanode
    cat > config.json <<EOF
{
  "items": [
  {
    "name": "dfs_data_dir_list",
    "value": "/var/tmp/datanode"
  }
  ]
}
EOF
  curl -u $CM_API_USER:$CM_API_PASS -X PUT -H 'Content-Type: application/json' "http://${CM_API_HOST}:${CM_API_PORT}/api/v13/clusters/$CDH_CLUSTER_NAME/services/HDFS/roleConfigGroups/HDFS-DATANODE-BASE/config" -d @config.json
  fi
else
  echo "Usage: $0 [CM API HOST] [CM API PORT] [CM API USER] [CM API PASS] [CDH Cluster Name]"
  exit 1
fi
